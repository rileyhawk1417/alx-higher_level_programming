===============================
The ``3-say_my_name`` module
===============================

Using ``say_my_name``
=======================

``say_my_name(...)`` prints "My name is <first_name> <last_name>".

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("Peter", "Parker") 
    My name is Peter Parker

::

    >>> say_my_name("Miles", "Morales") 
    My name is Miles Morales

The parameter ``last_name`` is optional. 
If no last name is provided an empty string is printed instead.
::

    >>> say_my_name("Spidey")
    My name is Spidey 

Invalid Names
================

``first_name`` & ``last_name`` must be strings. If not Raise a TypeError

::

    >>> say_my_name("Jamie", 0)
    Traceback (most recent call last):
    TypeError: last_name must be a string

::

    >>> say_my_name(1, "Oliver")
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name("Paul", {"Walker", "Brian O'Conner"})
    Traceback (most recent call last):
    TypeError: last_name must be a string

::

    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

At least provide one name
::

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
